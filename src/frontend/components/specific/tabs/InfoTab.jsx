import React from "react";
import { observer } from "mobx-react-lite";
import { useEffect } from "react";
import styled from "styled-components";
import MenuCard from "../../universal/MenuCard.jsx";
import { modalWindowsManagerStore } from "../../../stores/ModalWindowsManagerStore.js";
import { noteTabStore } from "../../../stores/tabsStores/NoteTabStore.js";
import { tabsManagerStore } from "../../../stores/TabsManagerStore.js";
import markdownit from "markdown-it";

const md = markdownit({ html: true, linkify: false, typographer: true });

import {
    IconFilePlus,
    IconHelp,
    IconLock,
    IconReportAnalytics,
    IconFileSymlink,
    IconRecycle
} from '@tabler/icons-react';



let InfoTextContainer = styled.div`
    letter-spacing: .01em; 
    word-break: normal; 
    max-width: 90%; 
    margin-left: 3em;
    margin-right: 1em;
    margin-top: 1em;
    margin-bottom: 1em;
    font-size: 125%;
`;

let text = `
# О программе

zht4971 является приложением для хранения текста и файлов. Базовая единица информации в приложении - запись. Записи представляют собой объекты, содержащие основной текст (в котором могут быть добавлены файлы), название, список псевдонимов, а также ряд других параметров. Основная идея программы заключается в создании большого набора текстовых описаний различных вещей с прикрепленными к ним файлами (записей), связанных между собой ссылками и хабами, с предоставлением возможности осуществления прямого доступа к любой записи при помощи поиска и списков записей.

Интерфейс программы разделен на несколько вкладок, таких как: Меню, Поиск, Список записей, Избранное, Справка, Просмотр и изменение. Используется шифрование алгоритмом AES-256 в режиме CBC и формирование ключа на основе пароля при помощи алгоритма PBKDF2. Приложение является портативным и помещается в одной папке. Установка не требуется. База данных, создаваемая программой, расположена в папке, содержащей папку программы. Программа использует нечеткий поиск для обработки вводимых названий и псевдонимов записи, что позволяет для действий с этими параметрами вводить их с небольшими отличиями от хранимого в базе данных варианта. В основных текстах записей поддерживается markdown.

Поддерживается добавление в записи файлов объемом до 2 гб (изображений, видео, архивов и прочего). Они будут отображены соответствующим их типу образом при просмотре записи. Загружаемые видео должны быть в формате webm или mp4, поэтому в некоторых случаях может потребоваться их конвертация при помощи сторонних средств. Для удаления из базы данных файлов, которые более не используются, в следствие удаления или изменения записей, рекомендуется периодически запускать сборку мусора через меню функций.

Каждая запись имеет обязательно указываемую семантическую дату в формате "дд.мм.гггг". Она указывается в специальном параметре записи, в ее названии, а также в каждом псевдониме. Наличие семантической даты позволяет избежать путаницы между записями, посвященными сущностям, имеющим одинаковое название, но разную суть стоящую за ним, варьирующуюся по мере хода времени.

Для удобства дачи ссылок, в программе существует алгоритм автоматической конкретизации семантической даты целевой записи ссылки, исполняющийся в момент перехода по ним. Во время любого перехода по ссылке, производится анализ ее текста-указателя (примерного названия или псевдонима цели ссылки), и делаются некоторые выводы. Если текст-указатель ссылки содержит семантическую дату в стандартном формате программы, ссылка обрабатывается "как есть". Если нет, то запускается конкретизатор. Он выбирает в качестве целевой для перехода записи ближайшую к источнику ссылки по семантической дате запись, по возможности более старую, чем источник ссылки. Если текст-указатель содержит набор символов "-", то по возможности будет выбираться не более старая, а наоборот младшая запись. Рекомендуется давать ссылки без семантической даты в их тексте-указателе.

Для того чтобы из текста записи дать ссылку на другую запись, необходимо приблизительно написать ее название или один из псевдонимов в двойных квадратных скобках. Пример: [[x]], где x - название или псевдоним записи, на которую планируется дать ссылку. Название или псевдоним записи можно указать без семантической даты, в таком случае ее автоматически определит конкретизатор. Отображаемый текст ссылки можно задать через символ "|". Пример: [[x|y]], где x - название или псевдоним записи, на которую планируется дать ссылку, а y - текст, которым будет написана ссылка. 

Для добавления в отображаемый вид записи текста другой записи используется конструкция, аналогичная ссылке, но с восклицательным знаком перед ней. Пример: ![[x]], где x - название или псевдоним целевой записи.

Для максимального упрощения и ускорения создания однотипных записей рекомендуется использовать шаблоны.

Для связывания нескольких записей, в программе предусмотренна возможность создания хабов - специальных, автоматически наполняемых, таблиц со ссылками на записи.
Хабы задаются через указания принадлежности к ним записей, при помощи выражений
следующего вида: {{x}}, где x - произвольно выбранное название хаба. Другой вариант: {{x/y}}, где x - название хаба, а y - название секции хаба, к которой принадлежит данная
запись. Записи, в тексте которых есть такие выражения с одним и тем же названием хаба, будут связанны этим хабом. Отдельной процедуры его создания не требуется. Название хаба
обрабатывается четко, по этому оно должно быть указанно точно и без ошибок.
В отображаемом виде хаб имеет заголовок, который является его названием и ссылкой на запись с таким же названием. Название хаба обязательно должно включать семантическую дату
в том же формате, в котором она указывается в названиях записей. В соответствие каждому хабу рекомендуется создавать запись, кратко описывающую его в целом и имеющее
то же название, что и он.
`;

let InfoTab = observer(() => {
    let renderedText = md.render(text);
    return (
        <InfoTextContainer dangerouslySetInnerHTML={{__html: renderedText}}>
        </InfoTextContainer>
    );
});

export default InfoTab;